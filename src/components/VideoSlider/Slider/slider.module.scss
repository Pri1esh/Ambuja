@import '../../../../styles/partials/variable';
@import '../../../../styles/partials/mixins';

.wrapper {
  position: relative;

  > div {
    @include rem(margin-left, -20);
    @include rem(margin-right, -20);

    @include media($sm, min) {
      padding: 0 0;
      @include rem(margin-left, 0);
      @include rem(margin-right, 0);
    }

    a {
      height: 100%;
    }
  }

  .item {
    height: 100%;
    position: relative;
    overflow: hidden;

    .imageContainer {
      @include rem(max-height, 168);
      overflow: hidden;

      @include media($md, min) {
        max-height: inherit;
      }

      img {
        object-fit: cover;
        width: 100%;
        height: 100%;
        transition: ease-in-out transform 2600ms;
      }
    }

    &:hover {
      .imageContainer {
        img {
          @include media($md, min) {
            transform: scale(1.1);
            transition: ease-in-out transform 2600ms;
          }

          @media only screen and (min-device-width: 64rem) and (max-device-width: 85.375rem) and (-webkit-min-device-pixel-ratio: 2) and (orientation: landscape) {
            transform: scale(1);
            transition: unset;
          }

          @media only screen and (min-device-width: 64rem) and (max-device-width: 85.375rem) and (-webkit-min-device-pixel-ratio: 2) and (orientation: portrait) {
            transform: scale(1);
            transition: unset;
          }

          cursor: pointer;
        }
      }
    }

    .textContainer {
      @include padding(20, 20, 24, 20);
      height: 100%;
      background-color: $secondary;

      h3 {
        @include font-size(18);
        @include rem(padding, 0);
        @include rem(margin, 0);
        color: $darkcharcoal;
      }

      .description {
        display: block;
        @include rem(padding-bottom, 70);
        color: $granite;

        @include media($lg, min) {
          @include rem(padding-bottom, 50);
        }
      }

      p {
        @include rem(margin-bottom, 0);
        text-transform: none;
        color: $granite;
      }

      .author {
        position: absolute;
        bottom: 1.25rem;
      }
    }
  }

  // VideoCard Start

.VideoTest {
  padding: 35px;

  &:hover {
    background-color: #ffffff;

    .title {
      color: #222222;
    }

    .desc {
      color: #222222;
    }
  }

  .title {
    font-size: 24px;
    line-height: 30px;
    font-weight: 500;
    color: #ffffff;
    letter-spacing: 0;
    margin-bottom: 0.8rem;
  }

  .desc {
    font-size: 19px;
    line-height: 22px;
    font-weight: 500;
    color: #ffffff;
    letter-spacing: 0;
    margin-bottom: 0.8rem;

    display: -webkit-box;
  -webkit-line-clamp: 1; /* Number of lines to show */
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  }

  .VideoTestBox {
    width: 100%;
    position: relative;
    margin-bottom: 2rem;
    aspect-ratio: 16 / 9;
    overflow: hidden;

    img {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }

    video {
      aspect-ratio: 16 / 9;
      object-fit: cover;
      width: 100%;
    }
  }
}

  // VideoCard End



  :global(.slick-list) {
    :global(.slick-track) {
      @include rem(column-gap, 20);
      display: flex;
      -webkit-transition: all 0.6s cubic-bezier(0.7, 0, 0.3, 1);
      transition: all 0.6s cubic-bezier(0.7, 0, 0.3, 1);

      @include media($md, min) {
        @include rem(column-gap, 30);
      }

      @include media-min-max($md, $lg) {
        @include rem(column-gap, 20);
      }

      :global(.slick-slide) {
        position: relative;
        background-color: transparent;
        height: auto;

        > div {
          display: block;
          height: 100%;

          > div {
            height: 100%;

            a {
              height: 100%;
            }
          }
        }

        .item {
          position: relative;
          height: 100%;

          span {
            @include rem(min-width, 98);
            @include padding(12, 8, 12, 8);
            position: absolute;
            left: 0.75rem;
            bottom: 0.75rem;
            background: $secondary;
          }
        }
      }
    }
  }

  :global(.slick-arrow) {
    top: -3.75rem;
    overflow: hidden;

    &:global(.slick-prev) {
      right: calc(((100% - 45rem) / 2) + 4rem);
      left: unset;

      @include media($md, min) {
        right: calc(((100% - 60rem) / 2) + 4rem);
      }

      @include media($lgb, min) {
        right: calc(((100% - 71.25rem) / 2) + 4rem);
      }

      @include media($xxxl, min) {
        right: calc(((100% - 82.5rem) / 2) + 4rem);
      }
    }

    &:global(.slick-next) {
      right: calc(((100% - 45rem) / 2) + 0.938rem);

      @include media($md, min) {
        right: calc(((100% - 60rem) / 2) + 0.938rem);
      }

      @include media($lgb, min) {
        right: calc(((100% - 71.25rem) / 2) + 0.938rem);
      }

      @include media($xxxl, min) {
        right: calc(((100% - 82.5rem) / 2) + 0.938rem);
      }
    }
  }
}
